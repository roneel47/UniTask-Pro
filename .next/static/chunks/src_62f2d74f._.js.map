{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/contexts/theme-provider.tsx"],"sourcesContent":["\"use client\";\n\nimport * as React from \"react\";\nimport { ThemeProvider as NextThemesProvider } from \"next-themes\";\nimport type { ThemeProviderProps } from \"next-themes/dist/types\";\n\nexport function ThemeProvider({ children, ...props }: ThemeProviderProps) {\n  return <NextThemesProvider {...props}>{children}</NextThemesProvider>;\n}"],"names":[],"mappings":";;;;;;;;;AAAA;;;AAMO,SAAS,cAAc,EAAE,QAAQ,EAAE,GAAG,OAA2B;IACtE,qBAAO,6LAAC;QAAoB,GAAG,KAAK;kBAAG;;;;;;AACzC;KAFgB","debugId":null}},
    {"offset": {"line": 41, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/hooks/use-local-storage.ts"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect, useCallback } from 'react';\n\n// Helper function to safely parse JSON\nfunction safelyParseJSON<T>(jsonString: string | null, defaultValue: T): T {\n  if (jsonString === null) {\n    return defaultValue;\n  }\n  try {\n    return JSON.parse(jsonString) as T;\n  } catch (error) {\n    console.warn(\"Error parsing JSON from localStorage\", error);\n    return defaultValue;\n  }\n}\n\nexport function useLocalStorage<T>(key: string, initialValue: T): [T, (value: T | ((val: T) => T)) => void] {\n  // Get from local storage then\n  // parse stored json or return initialValue\n  const readValue = useCallback((): T => {\n    // Prevent build error \"window is undefined\" but keeps working\n    if (typeof window === 'undefined') {\n      return initialValue;\n    }\n\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? safelyParseJSON(item, initialValue) : initialValue;\n    } catch (error) {\n      console.warn(`Error reading localStorage key \"${key}\":`, error);\n      return initialValue;\n    }\n  }, [initialValue, key]);\n\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState<T>(readValue);\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = (value: T | ((val: T) => T)) => {\n    // Prevent build error \"window is undefined\" but keeps working\n    if (typeof window === 'undefined') {\n      console.warn(\n        `Tried setting localStorage key \"${key}\" even though environment is not a client`\n      );\n    }\n\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      // Save state\n      setStoredValue(valueToStore);\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      console.warn(`Error setting localStorage key \"${key}\":`, error);\n    }\n  };\n\n  useEffect(() => {\n    setStoredValue(readValue());\n     // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n\n  useEffect(() => {\n    const handleStorageChange = (event: StorageEvent) => {\n      if (event.key === key && event.newValue !== null) {\n        setStoredValue(safelyParseJSON(event.newValue, initialValue));\n      }\n    };\n\n    window.addEventListener('storage', handleStorageChange);\n    return () => {\n      window.removeEventListener('storage', handleStorageChange);\n    };\n  }, [key, initialValue]);\n\n\n  return [storedValue, setValue];\n}"],"names":[],"mappings":";;;AAEA;;AAFA;;AAIA,uCAAuC;AACvC,SAAS,gBAAmB,UAAyB,EAAE,YAAe;IACpE,IAAI,eAAe,MAAM;QACvB,OAAO;IACT;IACA,IAAI;QACF,OAAO,KAAK,KAAK,CAAC;IACpB,EAAE,OAAO,OAAO;QACd,QAAQ,IAAI,CAAC,wCAAwC;QACrD,OAAO;IACT;AACF;AAEO,SAAS,gBAAmB,GAAW,EAAE,YAAe;;IAC7D,8BAA8B;IAC9B,2CAA2C;IAC3C,MAAM,YAAY,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;kDAAE;YAC5B,8DAA8D;YAC9D,uCAAmC;;YAEnC;YAEA,IAAI;gBACF,MAAM,OAAO,OAAO,YAAY,CAAC,OAAO,CAAC;gBACzC,OAAO,OAAO,gBAAgB,MAAM,gBAAgB;YACtD,EAAE,OAAO,OAAO;gBACd,QAAQ,IAAI,CAAC,CAAC,gCAAgC,EAAE,IAAI,EAAE,CAAC,EAAE;gBACzD,OAAO;YACT;QACF;iDAAG;QAAC;QAAc;KAAI;IAEtB,2BAA2B;IAC3B,yEAAyE;IACzE,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAK;IAElD,kEAAkE;IAClE,8CAA8C;IAC9C,MAAM,WAAW,CAAC;QAChB,8DAA8D;QAC9D,uCAAmC;;QAInC;QAEA,IAAI;YACF,+DAA+D;YAC/D,MAAM,eACJ,iBAAiB,WAAW,MAAM,eAAe;YACnD,aAAa;YACb,eAAe;YACf,wBAAwB;YACxB,OAAO,YAAY,CAAC,OAAO,CAAC,KAAK,KAAK,SAAS,CAAC;QAClD,EAAE,OAAO,OAAO;YACd,QAAQ,IAAI,CAAC,CAAC,gCAAgC,EAAE,IAAI,EAAE,CAAC,EAAE;QAC3D;IACF;IAEA,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;qCAAE;YACR,eAAe;QACd,uDAAuD;QAC1D;oCAAG,EAAE;IAGL,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;qCAAE;YACR,MAAM;iEAAsB,CAAC;oBAC3B,IAAI,MAAM,GAAG,KAAK,OAAO,MAAM,QAAQ,KAAK,MAAM;wBAChD,eAAe,gBAAgB,MAAM,QAAQ,EAAE;oBACjD;gBACF;;YAEA,OAAO,gBAAgB,CAAC,WAAW;YACnC;6CAAO;oBACL,OAAO,mBAAmB,CAAC,WAAW;gBACxC;;QACF;oCAAG;QAAC;QAAK;KAAa;IAGtB,OAAO;QAAC;QAAa;KAAS;AAChC;GAlEgB","debugId":null}},
    {"offset": {"line": 144, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/constants.ts"],"sourcesContent":["export const LOCAL_STORAGE_USERS_KEY = \"unitask_users\";\nexport const LOCAL_STORAGE_TASKS_KEY = \"unitask_tasks\";\nexport const LOCAL_STORAGE_TASK_ASSIGNMENTS_META_KEY = \"unitask_task_assignments_meta\";\n\n\nexport const MASTER_ADMIN_USN = \"MASTERADMIN1\";\nexport const MASTER_ADMIN_PASSWORD = \"MasterPass!456\"; // In a real app, this would not be hardcoded.\nexport const MASTER_ADMIN_NAME = \"Master Administrator\";\n\nexport const APP_NAME = \"UniTask Pro\";"],"names":[],"mappings":";;;;;;;;;AAAO,MAAM,0BAA0B;AAChC,MAAM,0BAA0B;AAChC,MAAM,0CAA0C;AAGhD,MAAM,mBAAmB;AACzB,MAAM,wBAAwB,kBAAkB,8CAA8C;AAC9F,MAAM,oBAAoB;AAE1B,MAAM,WAAW","debugId":null}},
    {"offset": {"line": 169, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/hooks/use-toast.ts"],"sourcesContent":["\"use client\"\n\n// Inspired by react-hot-toast library\nimport * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 335, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/contexts/auth-context.tsx"],"sourcesContent":["\"use client\";\n\nimport type { User, UserRole } from '@/types';\nimport React, { createContext, useState, useEffect, useCallback } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { useLocalStorage } from '@/hooks/use-local-storage';\nimport { LOCAL_STORAGE_USERS_KEY, MASTER_ADMIN_USN, MASTER_ADMIN_PASSWORD, MASTER_ADMIN_NAME } from '@/lib/constants';\nimport { toast } from '@/hooks/use-toast';\n\ninterface AuthContextType {\n  currentUser: User | null;\n  isAuthenticated: boolean;\n  isLoading: boolean;\n  login: (usn: string, password?: string) => Promise<boolean>;\n  register: (userData: Omit<User, 'id'>) => Promise<boolean>;\n  logout: () => void;\n  updateCurrentUser: (updatedUser: User) => void;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [users, setUsers] = useLocalStorage<User[]>(LOCAL_STORAGE_USERS_KEY, []);\n  const router = useRouter();\n\n  const initializeMasterAdmin = useCallback(() => {\n    const masterAdminExists = users.some(user => user.usn === MASTER_ADMIN_USN);\n    if (!masterAdminExists) {\n      const masterAdmin: User = {\n        id: MASTER_ADMIN_USN,\n        usn: MASTER_ADMIN_USN,\n        password: MASTER_ADMIN_PASSWORD, // In a real app, hash this password\n        role: 'master-admin',\n        semester: 'N/A',\n        name: MASTER_ADMIN_NAME,\n      };\n      setUsers([...users, masterAdmin]);\n    }\n  }, [users, setUsers]);\n\n\n  useEffect(() => {\n    initializeMasterAdmin();\n    // Attempt to load user from session storage or local storage\n    const storedUserJson = sessionStorage.getItem('currentUser');\n    if (storedUserJson) {\n      const storedUser = JSON.parse(storedUserJson) as User;\n      // Validate against users in localStorage\n      const validatedUser = users.find(u => u.usn === storedUser.usn);\n      if (validatedUser) {\n        setCurrentUser(validatedUser);\n      } else {\n        // User in session storage is not in our users list, possibly removed\n        sessionStorage.removeItem('currentUser');\n      }\n    }\n    setIsLoading(false);\n  }, [users, initializeMasterAdmin]);\n\n  const login = async (usn: string, password?: string): Promise<boolean> => {\n    setIsLoading(true);\n    const upperUsn = usn.toUpperCase();\n    const user = users.find(u => u.usn === upperUsn);\n\n    if (user && (!user.password || user.password === password)) { // If no password set, or password matches\n      setCurrentUser(user);\n      sessionStorage.setItem('currentUser', JSON.stringify(user));\n      setIsLoading(false);\n      router.push('/dashboard');\n      toast({ title: \"Login Successful\", description: `Welcome back, ${user.name || user.usn}!` });\n      return true;\n    }\n    setIsLoading(false);\n    toast({ title: \"Login Failed\", description: \"Invalid USN or password.\", variant: \"destructive\" });\n    return false;\n  };\n\n  const register = async (userData: Omit<User, 'id'>): Promise<boolean> => {\n    setIsLoading(true);\n    const upperUsn = userData.usn.toUpperCase();\n    if (users.some(u => u.usn === upperUsn)) {\n      setIsLoading(false);\n      toast({ title: \"Registration Failed\", description: \"USN already exists.\", variant: \"destructive\" });\n      return false;\n    }\n    \n    const newUser: User = { \n      ...userData, \n      id: upperUsn, \n      usn: upperUsn, \n      // Ensure password is set, even if empty string, if role is student\n      // For admins, password can be optional initially\n      password: userData.password || (userData.role === 'student' ? \"\" : undefined),\n    };\n    setUsers([...users, newUser]);\n    // Optionally log in the user directly after registration\n    // await login(newUser.usn, newUser.password); \n    setIsLoading(false);\n    toast({ title: \"Registration Successful\", description: \"You can now log in.\" });\n    router.push('/login');\n    return true;\n  };\n\n  const logout = () => {\n    setCurrentUser(null);\n    sessionStorage.removeItem('currentUser');\n    router.push('/login');\n    toast({ title: \"Logged Out\", description: \"You have been successfully logged out.\" });\n  };\n\n  const updateCurrentUser = (updatedUser: User) => {\n    setCurrentUser(updatedUser);\n    sessionStorage.setItem('currentUser', JSON.stringify(updatedUser));\n    // Also update in the main users list\n    setUsers(prevUsers => prevUsers.map(u => u.id === updatedUser.id ? updatedUser : u));\n  };\n\n  return (\n    <AuthContext.Provider value={{ \n      currentUser, \n      isAuthenticated: !!currentUser, \n      isLoading, \n      login, \n      register, \n      logout,\n      updateCurrentUser\n    }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = React.useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 524, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/hooks/use-auth.ts"],"sourcesContent":["\"use client\";\nimport { useContext } from 'react';\nimport { AuthProvider, useAuth as useAuthContext } from '@/contexts/auth-context'; // Assuming AuthProvider is exported if needed elsewhere, or adjust path\n\n// Export useAuth directly from the context file's hook\nexport { useAuthContext as useAuth };"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 546, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/contexts/data-context.tsx"],"sourcesContent":["\"use client\";\n\nimport type { Task, User, TaskStatus, TaskAssignmentMeta } from '@/types';\nimport React, { createContext, useState, useEffect, useCallback } from 'react';\nimport { useLocalStorage } from '@/hooks/use-local-storage';\nimport { \n  LOCAL_STORAGE_TASKS_KEY, \n  LOCAL_STORAGE_USERS_KEY, \n  LOCAL_STORAGE_TASK_ASSIGNMENTS_META_KEY \n} from '@/lib/constants';\nimport { useAuth } from '@/hooks/use-auth';\nimport { toast } from '@/hooks/use-toast';\nimport { formatISO } from 'date-fns';\n\ninterface DataContextType {\n  users: User[];\n  tasks: Task[];\n  taskAssignmentsMeta: TaskAssignmentMeta[];\n  isLoading: boolean;\n  fetchTasks: () => void;\n  addTask: (taskData: Omit<Task, 'id' | 'status' | 'createdAt' | 'updatedAt'>) => Promise<Task | null>;\n  updateTask: (taskId: string, updates: Partial<Task>) => Promise<Task | null>;\n  updateTaskStatus: (taskId: string, newStatus: TaskStatus, currentColumnId?: string) => Promise<Task | null>;\n  deleteTask: (taskId: string) => Promise<boolean>;\n  deleteUser: (userId: string) => Promise<boolean>;\n  updateUser: (userId: string, updates: Partial<User>) => Promise<User | null>;\n  getTasksForCurrentUser: () => Task[];\n  getTasksByAdmin: (adminUsn: string) => Task[];\n  getUsersByFilter: (role?: User['role'], semester?: User['semester'], usnSearch?: string) => User[];\n  addTaskAssignmentMeta: (meta: Omit<TaskAssignmentMeta, 'id' | 'createdAt'>) => Promise<TaskAssignmentMeta | null>;\n  deleteTaskAssignmentMetaAndTasks: (metaId: string) => Promise<boolean>;\n}\n\nconst DataContext = createContext<DataContextType | undefined>(undefined);\n\nexport const DataProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const { currentUser } = useAuth();\n  const [storedUsers, setStoredUsers] = useLocalStorage<User[]>(LOCAL_STORAGE_USERS_KEY, []);\n  const [storedTasks, setStoredTasks] = useLocalStorage<Task[]>(LOCAL_STORAGE_TASKS_KEY, []);\n  const [storedTaskAssignmentsMeta, setStoredTaskAssignmentsMeta] = useLocalStorage<TaskAssignmentMeta[]>(LOCAL_STORAGE_TASK_ASSIGNMENTS_META_KEY, []);\n  \n  const [users, setUsers] = useState<User[]>(storedUsers);\n  const [tasks, setTasks] = useState<Task[]>(storedTasks);\n  const [taskAssignmentsMeta, setTaskAssignmentsMeta] = useState<TaskAssignmentMeta[]>(storedTaskAssignmentsMeta);\n\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => setUsers(storedUsers), [storedUsers]);\n  useEffect(() => setTasks(storedTasks), [storedTasks]);\n  useEffect(() => setTaskAssignmentsMeta(storedTaskAssignmentsMeta), [storedTaskAssignmentsMeta]);\n\n  const fetchTasks = useCallback(() => {\n    setIsLoading(true);\n    // Simulating API call delay\n    setTimeout(() => {\n      // Retroactive task assignment for new/updated students\n      if (currentUser && currentUser.role === 'student' && currentUser.semester !== 'N/A') {\n        const userTasks = storedTasks.filter(task => task.assignedToUsn === currentUser.usn);\n        const semesterWideTasks = storedTasks.filter(\n          task => task.assignedToSemester === currentUser.semester && task.assignedToUsn === 'all'\n        );\n        \n        semesterWideTasks.forEach(semesterTask => {\n          const userAlreadyHasTask = userTasks.some(ut => ut.title === semesterTask.title && ut.assigningAdminUsn === semesterTask.assigningAdminUsn);\n          if (!userAlreadyHasTask) {\n            const newTaskForUser: Task = {\n              ...semesterTask,\n              id: `${currentUser.usn}-${Date.now()}-${Math.random().toString(36).substring(2, 7)}`, // Ensure unique ID\n              assignedToUsn: currentUser.usn, // Specifically assign to this user\n              status: 'To Be Started',\n              createdAt: formatISO(new Date()),\n              updatedAt: formatISO(new Date()),\n            };\n            setStoredTasks(prevTasks => [...prevTasks, newTaskForUser]);\n          }\n        });\n      }\n      setTasks(storedTasks);\n      setIsLoading(false);\n    }, 500);\n  }, [currentUser, storedTasks, setStoredTasks]);\n\n  useEffect(() => {\n    fetchTasks();\n  }, [fetchTasks, currentUser]);\n\n\n  const addTask = async (taskData: Omit<Task, 'id' | 'status' | 'createdAt' | 'updatedAt'>): Promise<Task | null> => {\n    if (!currentUser || currentUser.role === 'student') {\n      toast({ title: \"Error\", description: \"Only admins can create tasks.\", variant: \"destructive\" });\n      return null;\n    }\n    \n    const newTasks: Task[] = [];\n    const now = formatISO(new Date());\n\n    if (taskData.assignedToUsn === 'all') {\n      // Assign to all users in the specified semester\n      const targetUsers = storedUsers.filter(u => u.semester === taskData.assignedToSemester && u.role === 'student');\n      targetUsers.forEach(user => {\n        newTasks.push({\n          ...taskData,\n          id: `${user.usn}-${Date.now()}-${Math.random().toString(36).substring(2, 7)}`,\n          status: 'To Be Started',\n          assignedToUsn: user.usn, // Assign specifically to this user\n          createdAt: now,\n          updatedAt: now,\n        });\n      });\n      // Also add a generic 'all' task for future users in that semester (or if no users currently)\n       newTasks.push({\n        ...taskData,\n        id: `all-${taskData.assignedToSemester}-${Date.now()}-${Math.random().toString(36).substring(2, 7)}`,\n        status: 'To Be Started',\n        assignedToUsn: 'all', // Keep the 'all' marker for this generic task\n        createdAt: now,\n        updatedAt: now,\n      });\n\n    } else {\n      // Assign to a specific user\n      const targetUser = storedUsers.find(u => u.usn === taskData.assignedToUsn);\n      if (!targetUser) {\n        toast({ title: \"Error\", description: `User ${taskData.assignedToUsn} not found.`, variant: \"destructive\" });\n        return null;\n      }\n      newTasks.push({\n        ...taskData,\n        id: `${targetUser.usn}-${Date.now()}-${Math.random().toString(36).substring(2, 7)}`,\n        status: 'To Be Started',\n        createdAt: now,\n        updatedAt: now,\n      });\n    }\n    \n    setStoredTasks(prevTasks => [...prevTasks, ...newTasks]);\n    toast({ title: \"Task Created\", description: `Task \"${taskData.title}\" assigned.` });\n    return newTasks[0]; // Return the first created task as a sample\n  };\n\n  const updateTask = async (taskId: string, updates: Partial<Task>): Promise<Task | null> => {\n    let updatedTask: Task | null = null;\n    setStoredTasks(prevTasks =>\n      prevTasks.map(task => {\n        if (task.id === taskId) {\n          updatedTask = { ...task, ...updates, updatedAt: formatISO(new Date()) };\n          return updatedTask;\n        }\n        return task;\n      })\n    );\n    if (updatedTask) toast({ title: \"Task Updated\", description: `Task \"${updatedTask.title}\" has been updated.` });\n    return updatedTask;\n  };\n\n  const updateTaskStatus = async (taskId: string, newStatus: TaskStatus): Promise<Task | null> => {\n    return updateTask(taskId, { status: newStatus });\n  };\n\n  const deleteTask = async (taskId: string): Promise<boolean> => {\n    const taskToDelete = storedTasks.find(t => t.id === taskId);\n    setStoredTasks(prevTasks => prevTasks.filter(task => task.id !== taskId));\n    if (taskToDelete) toast({ title: \"Task Deleted\", description: `Task \"${taskToDelete.title}\" removed.` });\n    return true;\n  };\n\n  const deleteUser = async (userId: string): Promise<boolean> => {\n    if (currentUser?.usn === userId || userId === MASTER_ADMIN_USN) {\n      toast({ title: \"Error\", description: \"Cannot delete self or Master Admin.\", variant: \"destructive\" });\n      return false;\n    }\n    const userToDelete = storedUsers.find(u => u.id === userId);\n    setStoredUsers(prevUsers => prevUsers.filter(user => user.id !== userId));\n    // Also delete tasks assigned TO this user\n    setStoredTasks(prevTasks => prevTasks.filter(task => task.assignedToUsn !== userId));\n    // Also delete tasks assigned BY this user if they were an admin\n    if (userToDelete?.role !== 'student') {\n      setStoredTasks(prevTasks => prevTasks.filter(task => task.assigningAdminUsn !== userId));\n      setStoredTaskAssignmentsMeta(prevMeta => prevMeta.filter(meta => meta.assigningAdminUsn !== userId));\n    }\n    if (userToDelete) toast({ title: \"User Deleted\", description: `User ${userToDelete.usn} and their tasks removed.` });\n    return true;\n  };\n  \n  const updateUser = async (userId: string, updates: Partial<User>): Promise<User | null> => {\n    let updatedUser: User | null = null;\n    setStoredUsers(prevUsers =>\n      prevUsers.map(user => {\n        if (user.id === userId) {\n          updatedUser = { ...user, ...updates };\n          // If role changed from admin to student, ensure semester is set (e.g., to '1' or a default)\n          if (user.role !== 'student' && updatedUser.role === 'student' && updatedUser.semester === 'N/A') {\n            updatedUser.semester = '1'; \n          }\n          // If role changed from student to admin, set semester to N/A\n          if (user.role === 'student' && updatedUser.role !== 'student') {\n            updatedUser.semester = 'N/A';\n          }\n          return updatedUser;\n        }\n        return user;\n      })\n    );\n    if (updatedUser) {\n        toast({ title: \"User Updated\", description: `User ${updatedUser.usn} details updated.` });\n        if(currentUser?.id === updatedUser.id) { // if current user is updated\n            const { updateCurrentUser } = useAuth();\n            updateCurrentUser(updatedUser);\n        }\n    }\n    return updatedUser;\n  };\n\n\n  const getTasksForCurrentUser = useCallback((): Task[] => {\n    if (!currentUser) return [];\n    return tasks.filter(task => task.assignedToUsn === currentUser.usn);\n  }, [currentUser, tasks]);\n\n  const getTasksByAdmin = useCallback((adminUsn: string): Task[] => {\n    return tasks.filter(task => task.assigningAdminUsn === adminUsn);\n  }, [tasks]);\n\n  const getUsersByFilter = useCallback((role?: User['role'], semester?: User['semester'], usnSearch?: string): User[] => {\n    return users.filter(user => {\n      const roleMatch = role ? user.role === role : true;\n      const semesterMatch = semester ? user.semester === semester : true;\n      const usnMatch = usnSearch ? user.usn.toUpperCase().includes(usnSearch.toUpperCase()) : true;\n      return roleMatch && semesterMatch && usnMatch;\n    });\n  }, [users]);\n\n  const addTaskAssignmentMeta = async (metaData: Omit<TaskAssignmentMeta, 'id' | 'createdAt'>): Promise<TaskAssignmentMeta | null> => {\n    const newMeta: TaskAssignmentMeta = {\n      ...metaData,\n      id: `${metaData.assigningAdminUsn}-${metaData.title}-${Date.now()}`,\n      createdAt: formatISO(new Date()),\n    };\n    setStoredTaskAssignmentsMeta(prevMeta => [...prevMeta, newMeta]);\n    return newMeta;\n  };\n\n  const deleteTaskAssignmentMetaAndTasks = async (metaId: string): Promise<boolean> => {\n    const metaToDelete = storedTaskAssignmentsMeta.find(m => m.id === metaId);\n    if (!metaToDelete) return false;\n\n    // Delete all tasks associated with this meta assignment\n    // This needs careful matching logic based on how tasks are created from meta\n    // Assuming tasks are linked by title, assigningAdminUsn, assignedToSemester, and assignedToTarget (original target)\n    setStoredTasks(prevTasks => prevTasks.filter(task => \n      !(task.title === metaToDelete.title &&\n        task.assigningAdminUsn === metaToDelete.assigningAdminUsn &&\n        task.assignedToSemester === metaToDelete.assignedToSemester &&\n        // This check is tricky if individual tasks were created.\n        // For simplicity, if it was an 'all' assignment, delete all specific tasks for that semester from that admin.\n        // If it was a specific USN assignment, this meta might represent that one task series.\n        // This part might need refinement based on exact creation logic.\n        (metaToDelete.assignedToTarget === 'all' ? true : task.assignedToUsn === metaToDelete.assignedToTarget) \n      )\n    ));\n    \n    setStoredTaskAssignmentsMeta(prevMeta => prevMeta.filter(m => m.id !== metaId));\n    toast({ title: \"Assignment Deleted\", description: `Assignment \"${metaToDelete.title}\" and its tasks removed.`});\n    return true;\n  };\n\n\n  return (\n    <DataContext.Provider value={{ \n      users, \n      tasks,\n      taskAssignmentsMeta,\n      isLoading,\n      fetchTasks,\n      addTask, \n      updateTask,\n      updateTaskStatus,\n      deleteTask,\n      deleteUser,\n      updateUser,\n      getTasksForCurrentUser,\n      getTasksByAdmin,\n      getUsersByFilter,\n      addTaskAssignmentMeta,\n      deleteTaskAssignmentMetaAndTasks\n    }}>\n      {children}\n    </DataContext.Provider>\n  );\n};\n\nexport const useData = () => {\n  const context = React.useContext(DataContext);\n  if (context === undefined) {\n    throw new Error('useData must be used within a DataProvider');\n  }\n  return context;\n};"],"names":[],"mappings":";;;;;AAGA;AACA;AACA;AAKA;AAAA;AACA;AACA;;;AAZA;;;;;;;AAiCA,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAA+B;AAExD,MAAM,eAAwD,CAAC,EAAE,QAAQ,EAAE;;IAChF,MAAM,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,sIAAA,CAAA,UAAO,AAAD;IAC9B,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,0IAAA,CAAA,kBAAe,AAAD,EAAU,0HAAA,CAAA,0BAAuB,EAAE,EAAE;IACzF,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,0IAAA,CAAA,kBAAe,AAAD,EAAU,0HAAA,CAAA,0BAAuB,EAAE,EAAE;IACzF,MAAM,CAAC,2BAA2B,6BAA6B,GAAG,CAAA,GAAA,0IAAA,CAAA,kBAAe,AAAD,EAAwB,0HAAA,CAAA,0CAAuC,EAAE,EAAE;IAEnJ,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IAC3C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IAC3C,MAAM,CAAC,qBAAqB,uBAAuB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAwB;IAErF,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE,IAAM,SAAS;iCAAc;QAAC;KAAY;IACpD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE,IAAM,SAAS;iCAAc;QAAC;KAAY;IACpD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE,IAAM,uBAAuB;iCAA4B;QAAC;KAA0B;IAE9F,MAAM,aAAa,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;gDAAE;YAC7B,aAAa;YACb,4BAA4B;YAC5B;wDAAW;oBACT,uDAAuD;oBACvD,IAAI,eAAe,YAAY,IAAI,KAAK,aAAa,YAAY,QAAQ,KAAK,OAAO;wBACnF,MAAM,YAAY,YAAY,MAAM;8EAAC,CAAA,OAAQ,KAAK,aAAa,KAAK,YAAY,GAAG;;wBACnF,MAAM,oBAAoB,YAAY,MAAM;sFAC1C,CAAA,OAAQ,KAAK,kBAAkB,KAAK,YAAY,QAAQ,IAAI,KAAK,aAAa,KAAK;;wBAGrF,kBAAkB,OAAO;oEAAC,CAAA;gCACxB,MAAM,qBAAqB,UAAU,IAAI;+FAAC,CAAA,KAAM,GAAG,KAAK,KAAK,aAAa,KAAK,IAAI,GAAG,iBAAiB,KAAK,aAAa,iBAAiB;;gCAC1I,IAAI,CAAC,oBAAoB;oCACvB,MAAM,iBAAuB;wCAC3B,GAAG,YAAY;wCACf,IAAI,GAAG,YAAY,GAAG,CAAC,CAAC,EAAE,KAAK,GAAG,GAAG,CAAC,EAAE,KAAK,MAAM,GAAG,QAAQ,CAAC,IAAI,SAAS,CAAC,GAAG,IAAI;wCACpF,eAAe,YAAY,GAAG;wCAC9B,QAAQ;wCACR,WAAW,CAAA,GAAA,4IAAA,CAAA,YAAS,AAAD,EAAE,IAAI;wCACzB,WAAW,CAAA,GAAA,4IAAA,CAAA,YAAS,AAAD,EAAE,IAAI;oCAC3B;oCACA;gFAAe,CAAA,YAAa;mDAAI;gDAAW;6CAAe;;gCAC5D;4BACF;;oBACF;oBACA,SAAS;oBACT,aAAa;gBACf;uDAAG;QACL;+CAAG;QAAC;QAAa;QAAa;KAAe;IAE7C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR;QACF;iCAAG;QAAC;QAAY;KAAY;IAG5B,MAAM,UAAU,OAAO;QACrB,IAAI,CAAC,eAAe,YAAY,IAAI,KAAK,WAAW;YAClD,CAAA,GAAA,+HAAA,CAAA,QAAK,AAAD,EAAE;gBAAE,OAAO;gBAAS,aAAa;gBAAiC,SAAS;YAAc;YAC7F,OAAO;QACT;QAEA,MAAM,WAAmB,EAAE;QAC3B,MAAM,MAAM,CAAA,GAAA,4IAAA,CAAA,YAAS,AAAD,EAAE,IAAI;QAE1B,IAAI,SAAS,aAAa,KAAK,OAAO;YACpC,gDAAgD;YAChD,MAAM,cAAc,YAAY,MAAM,CAAC,CAAA,IAAK,EAAE,QAAQ,KAAK,SAAS,kBAAkB,IAAI,EAAE,IAAI,KAAK;YACrG,YAAY,OAAO,CAAC,CAAA;gBAClB,SAAS,IAAI,CAAC;oBACZ,GAAG,QAAQ;oBACX,IAAI,GAAG,KAAK,GAAG,CAAC,CAAC,EAAE,KAAK,GAAG,GAAG,CAAC,EAAE,KAAK,MAAM,GAAG,QAAQ,CAAC,IAAI,SAAS,CAAC,GAAG,IAAI;oBAC7E,QAAQ;oBACR,eAAe,KAAK,GAAG;oBACvB,WAAW;oBACX,WAAW;gBACb;YACF;YACA,6FAA6F;YAC5F,SAAS,IAAI,CAAC;gBACb,GAAG,QAAQ;gBACX,IAAI,CAAC,IAAI,EAAE,SAAS,kBAAkB,CAAC,CAAC,EAAE,KAAK,GAAG,GAAG,CAAC,EAAE,KAAK,MAAM,GAAG,QAAQ,CAAC,IAAI,SAAS,CAAC,GAAG,IAAI;gBACpG,QAAQ;gBACR,eAAe;gBACf,WAAW;gBACX,WAAW;YACb;QAEF,OAAO;YACL,4BAA4B;YAC5B,MAAM,aAAa,YAAY,IAAI,CAAC,CAAA,IAAK,EAAE,GAAG,KAAK,SAAS,aAAa;YACzE,IAAI,CAAC,YAAY;gBACf,CAAA,GAAA,+HAAA,CAAA,QAAK,AAAD,EAAE;oBAAE,OAAO;oBAAS,aAAa,CAAC,KAAK,EAAE,SAAS,aAAa,CAAC,WAAW,CAAC;oBAAE,SAAS;gBAAc;gBACzG,OAAO;YACT;YACA,SAAS,IAAI,CAAC;gBACZ,GAAG,QAAQ;gBACX,IAAI,GAAG,WAAW,GAAG,CAAC,CAAC,EAAE,KAAK,GAAG,GAAG,CAAC,EAAE,KAAK,MAAM,GAAG,QAAQ,CAAC,IAAI,SAAS,CAAC,GAAG,IAAI;gBACnF,QAAQ;gBACR,WAAW;gBACX,WAAW;YACb;QACF;QAEA,eAAe,CAAA,YAAa;mBAAI;mBAAc;aAAS;QACvD,CAAA,GAAA,+HAAA,CAAA,QAAK,AAAD,EAAE;YAAE,OAAO;YAAgB,aAAa,CAAC,MAAM,EAAE,SAAS,KAAK,CAAC,WAAW,CAAC;QAAC;QACjF,OAAO,QAAQ,CAAC,EAAE,EAAE,4CAA4C;IAClE;IAEA,MAAM,aAAa,OAAO,QAAgB;QACxC,IAAI,cAA2B;QAC/B,eAAe,CAAA,YACb,UAAU,GAAG,CAAC,CAAA;gBACZ,IAAI,KAAK,EAAE,KAAK,QAAQ;oBACtB,cAAc;wBAAE,GAAG,IAAI;wBAAE,GAAG,OAAO;wBAAE,WAAW,CAAA,GAAA,4IAAA,CAAA,YAAS,AAAD,EAAE,IAAI;oBAAQ;oBACtE,OAAO;gBACT;gBACA,OAAO;YACT;QAEF,IAAI,aAAa,CAAA,GAAA,+HAAA,CAAA,QAAK,AAAD,EAAE;YAAE,OAAO;YAAgB,aAAa,CAAC,MAAM,EAAE,YAAY,KAAK,CAAC,mBAAmB,CAAC;QAAC;QAC7G,OAAO;IACT;IAEA,MAAM,mBAAmB,OAAO,QAAgB;QAC9C,OAAO,WAAW,QAAQ;YAAE,QAAQ;QAAU;IAChD;IAEA,MAAM,aAAa,OAAO;QACxB,MAAM,eAAe,YAAY,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK;QACpD,eAAe,CAAA,YAAa,UAAU,MAAM,CAAC,CAAA,OAAQ,KAAK,EAAE,KAAK;QACjE,IAAI,cAAc,CAAA,GAAA,+HAAA,CAAA,QAAK,AAAD,EAAE;YAAE,OAAO;YAAgB,aAAa,CAAC,MAAM,EAAE,aAAa,KAAK,CAAC,UAAU,CAAC;QAAC;QACtG,OAAO;IACT;IAEA,MAAM,aAAa,OAAO;QACxB,IAAI,aAAa,QAAQ,UAAU,WAAW,kBAAkB;YAC9D,CAAA,GAAA,+HAAA,CAAA,QAAK,AAAD,EAAE;gBAAE,OAAO;gBAAS,aAAa;gBAAuC,SAAS;YAAc;YACnG,OAAO;QACT;QACA,MAAM,eAAe,YAAY,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK;QACpD,eAAe,CAAA,YAAa,UAAU,MAAM,CAAC,CAAA,OAAQ,KAAK,EAAE,KAAK;QACjE,0CAA0C;QAC1C,eAAe,CAAA,YAAa,UAAU,MAAM,CAAC,CAAA,OAAQ,KAAK,aAAa,KAAK;QAC5E,gEAAgE;QAChE,IAAI,cAAc,SAAS,WAAW;YACpC,eAAe,CAAA,YAAa,UAAU,MAAM,CAAC,CAAA,OAAQ,KAAK,iBAAiB,KAAK;YAChF,6BAA6B,CAAA,WAAY,SAAS,MAAM,CAAC,CAAA,OAAQ,KAAK,iBAAiB,KAAK;QAC9F;QACA,IAAI,cAAc,CAAA,GAAA,+HAAA,CAAA,QAAK,AAAD,EAAE;YAAE,OAAO;YAAgB,aAAa,CAAC,KAAK,EAAE,aAAa,GAAG,CAAC,yBAAyB,CAAC;QAAC;QAClH,OAAO;IACT;IAEA,MAAM,aAAa,OAAO,QAAgB;QACxC,IAAI,cAA2B;QAC/B,eAAe,CAAA,YACb,UAAU,GAAG,CAAC,CAAA;gBACZ,IAAI,KAAK,EAAE,KAAK,QAAQ;oBACtB,cAAc;wBAAE,GAAG,IAAI;wBAAE,GAAG,OAAO;oBAAC;oBACpC,4FAA4F;oBAC5F,IAAI,KAAK,IAAI,KAAK,aAAa,YAAY,IAAI,KAAK,aAAa,YAAY,QAAQ,KAAK,OAAO;wBAC/F,YAAY,QAAQ,GAAG;oBACzB;oBACA,6DAA6D;oBAC7D,IAAI,KAAK,IAAI,KAAK,aAAa,YAAY,IAAI,KAAK,WAAW;wBAC7D,YAAY,QAAQ,GAAG;oBACzB;oBACA,OAAO;gBACT;gBACA,OAAO;YACT;QAEF,IAAI,aAAa;YACb,CAAA,GAAA,+HAAA,CAAA,QAAK,AAAD,EAAE;gBAAE,OAAO;gBAAgB,aAAa,CAAC,KAAK,EAAE,YAAY,GAAG,CAAC,iBAAiB,CAAC;YAAC;YACvF,IAAG,aAAa,OAAO,YAAY,EAAE,EAAE;gBACnC,MAAM,EAAE,iBAAiB,EAAE,GAAG,CAAA,GAAA,sIAAA,CAAA,UAAO,AAAD;gBACpC,kBAAkB;YACtB;QACJ;QACA,OAAO;IACT;IAGA,MAAM,yBAAyB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;4DAAE;YACzC,IAAI,CAAC,aAAa,OAAO,EAAE;YAC3B,OAAO,MAAM,MAAM;oEAAC,CAAA,OAAQ,KAAK,aAAa,KAAK,YAAY,GAAG;;QACpE;2DAAG;QAAC;QAAa;KAAM;IAEvB,MAAM,kBAAkB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;qDAAE,CAAC;YACnC,OAAO,MAAM,MAAM;6DAAC,CAAA,OAAQ,KAAK,iBAAiB,KAAK;;QACzD;oDAAG;QAAC;KAAM;IAEV,MAAM,mBAAmB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;sDAAE,CAAC,MAAqB,UAA6B;YACtF,OAAO,MAAM,MAAM;8DAAC,CAAA;oBAClB,MAAM,YAAY,OAAO,KAAK,IAAI,KAAK,OAAO;oBAC9C,MAAM,gBAAgB,WAAW,KAAK,QAAQ,KAAK,WAAW;oBAC9D,MAAM,WAAW,YAAY,KAAK,GAAG,CAAC,WAAW,GAAG,QAAQ,CAAC,UAAU,WAAW,MAAM;oBACxF,OAAO,aAAa,iBAAiB;gBACvC;;QACF;qDAAG;QAAC;KAAM;IAEV,MAAM,wBAAwB,OAAO;QACnC,MAAM,UAA8B;YAClC,GAAG,QAAQ;YACX,IAAI,GAAG,SAAS,iBAAiB,CAAC,CAAC,EAAE,SAAS,KAAK,CAAC,CAAC,EAAE,KAAK,GAAG,IAAI;YACnE,WAAW,CAAA,GAAA,4IAAA,CAAA,YAAS,AAAD,EAAE,IAAI;QAC3B;QACA,6BAA6B,CAAA,WAAY;mBAAI;gBAAU;aAAQ;QAC/D,OAAO;IACT;IAEA,MAAM,mCAAmC,OAAO;QAC9C,MAAM,eAAe,0BAA0B,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK;QAClE,IAAI,CAAC,cAAc,OAAO;QAE1B,wDAAwD;QACxD,6EAA6E;QAC7E,oHAAoH;QACpH,eAAe,CAAA,YAAa,UAAU,MAAM,CAAC,CAAA,OAC3C,CAAC,CAAC,KAAK,KAAK,KAAK,aAAa,KAAK,IACjC,KAAK,iBAAiB,KAAK,aAAa,iBAAiB,IACzD,KAAK,kBAAkB,KAAK,aAAa,kBAAkB,IAC3D,yDAAyD;gBACzD,8GAA8G;gBAC9G,uFAAuF;gBACvF,iEAAiE;gBACjE,CAAC,aAAa,gBAAgB,KAAK,QAAQ,OAAO,KAAK,aAAa,KAAK,aAAa,gBAAgB,CACxG;QAGF,6BAA6B,CAAA,WAAY,SAAS,MAAM,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK;QACvE,CAAA,GAAA,+HAAA,CAAA,QAAK,AAAD,EAAE;YAAE,OAAO;YAAsB,aAAa,CAAC,YAAY,EAAE,aAAa,KAAK,CAAC,wBAAwB,CAAC;QAAA;QAC7G,OAAO;IACT;IAGA,qBACE,6LAAC,YAAY,QAAQ;QAAC,OAAO;YAC3B;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;QACF;kBACG;;;;;;AAGP;GA9Pa;;QACa,sIAAA,CAAA,UAAO;QACO,0IAAA,CAAA,kBAAe;QACf,0IAAA,CAAA,kBAAe;QACa,0IAAA,CAAA,kBAAe;;;KAJtE;AAgQN,MAAM,UAAU;;IACrB,MAAM,UAAU,6JAAA,CAAA,UAAK,CAAC,UAAU,CAAC;IACjC,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;IANa","debugId":null}},
    {"offset": {"line": 919, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 938, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/toast.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;AACA;AACA;AACA;AAEA;AAPA;;;;;;;AASA,MAAM,gBAAgB,oKAAA,CAAA,WAAwB;AAE9C,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,WAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qIACA;QAED,GAAG,KAAK;;;;;;;AAGb,cAAc,WAAW,GAAG,oKAAA,CAAA,WAAwB,CAAC,WAAW;AAEhE,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,6lBACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAI3B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE;IACnC,qBACE,6LAAC,oKAAA,CAAA,OAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;;AACA,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAoB,CAAC,WAAW;AAEpD,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,SAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sgBACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,oKAAA,CAAA,SAAsB,CAAC,WAAW;AAE5D,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,yVACA;QAEF,eAAY;QACX,GAAG,KAAK;kBAET,cAAA,6LAAC,+LAAA,CAAA,IAAC;YAAC,WAAU;;;;;;;;;;;;AAGjB,WAAW,WAAW,GAAG,oKAAA,CAAA,QAAqB,CAAC,WAAW;AAE1D,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,yBAAyB;QACtC,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG,oKAAA,CAAA,QAAqB,CAAC,WAAW;AAE1D,MAAM,iCAAmB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sBAAsB;QACnC,GAAG,KAAK;;;;;;;AAGb,iBAAiB,WAAW,GAAG,oKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1073, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/toaster.tsx"],"sourcesContent":["\"use client\"\n\nimport { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAYO,SAAS;;IACd,MAAM,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,WAAQ,AAAD;IAE1B,qBACE,6LAAC,oIAAA,CAAA,gBAAa;;YACX,OAAO,GAAG,CAAC,SAAU,EAAE,EAAE,EAAE,KAAK,EAAE,WAAW,EAAE,MAAM,EAAE,GAAG,OAAO;gBAChE,qBACE,6LAAC,oIAAA,CAAA,QAAK;oBAAW,GAAG,KAAK;;sCACvB,6LAAC;4BAAI,WAAU;;gCACZ,uBAAS,6LAAC,oIAAA,CAAA,aAAU;8CAAE;;;;;;gCACtB,6BACC,6LAAC,oIAAA,CAAA,mBAAgB;8CAAE;;;;;;;;;;;;wBAGtB;sCACD,6LAAC,oIAAA,CAAA,aAAU;;;;;;mBARD;;;;;YAWhB;0BACA,6LAAC,oIAAA,CAAA,gBAAa;;;;;;;;;;;AAGpB;GAtBgB;;QACK,+HAAA,CAAA,WAAQ;;;KADb","debugId":null}}]
}